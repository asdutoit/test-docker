name: Docker Build and Push Image

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: GitHub Tag Name example
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      - name: Get the Git tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null) || TAG="v0.0.0"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "TAG=$TAG"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: asdutoit/fastify-basic
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.tags }}
        # run: |
        #   # Get the Git tag
        #   version=20

        #   # Build and tag the docker images
        #   docker buildx create --use
        #   docker buildx build --platform linux/amd64,linux/arm64 -t ${{vars.DOCKER_HUB_USERNAME}}/${{vars.APP_NAME}}:$version -t ${{vars.DOCKER_HUB_USERNAME}}/${{vars.APP_NAME}}:latest .

        #   # Log in to Docker Hub
        #   echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

        #   # Push the docker images
        #   docker push ${{vars.DOCKER_HUB_USERNAME}}/${{vars.APP_NAME}}:$version
        #   docker push ${{vars.DOCKER_HUB_USERNAME}}/${{vars.APP_NAME}}:latest
